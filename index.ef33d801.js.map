{"mappings":"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","sources":["node_modules/accordion/src/helpers.mjs","node_modules/accordion/src/fold.mjs","node_modules/accordion/src/accordion.mjs","src/js/faq.js"],"sourcesContent":["\"use strict\";\n\nexport const touchEnabled = \"ontouchstart\" in document.documentElement;\nexport const pressEvent   = touchEnabled ? \"touchend\" : \"click\";\n\n\n/**\n * Name of the onTransitionEnd event supported by this browser.\n * @const {String} transitionEnd\n */\nexport const transitionEnd = (function(){\n\tconst names = \"transitionend webkitTransitionEnd oTransitionEnd otransitionend\".split(\" \");\n\tfor(let i = 0; i < 4; ++i)\n\t\tif(\"on\" + names[i].toLowerCase() in window)\n\t\t\treturn names[i];\n\treturn names[0];\n}());\n\n\n\n/**\n * Conditionally add or remove a token from a token-list.\n *\n * @param {DOMTokenList} list\n * @param {String} token\n * @param {Boolean} enabled\n */\nexport function setToken(list, token, enabled){\n\tenabled ? list.add(token) : list.remove(token);\n}\n\n\n\n/**\n * Stop a function from firing too quickly.\n *\n * Returns a copy of the original function that runs only after the designated\n * number of milliseconds have elapsed. Useful for throttling onResize handlers.\n *\n * @param {Function} fn - Function to debounce\n * @param {Number} [limit=0] - Threshold to stall execution by, in milliseconds.\n * @param {Boolean} [asap=false] - Call function *before* threshold elapses, not after.\n * @return {Function}\n */\nexport function debounce(fn, limit = 0, asap = false){\n\tlet started, context, args, timing;\n\t\n\tconst delayed = function(){\n\t\tconst timeSince = Date.now() - started;\n\t\tif(timeSince >= limit){\n\t\t\tif(!asap) fn.apply(context, args);\n\t\t\tif(timing) clearTimeout(timing);\n\t\t\ttiming = context = args = null;\n\t\t}\n\t\telse timing = setTimeout(delayed, limit - timeSince);\n\t};\n\t\n\t// Debounced copy of original function\n\treturn function(){\n\t\tcontext = this,\n\t\targs    = arguments;\n\t\tif(!limit)\n\t\t\treturn fn.apply(context, args);\n\t\tstarted = Date.now();\n\t\tif(!timing){\n\t\t\tif(asap) fn.apply(context, args);\n\t\t\ttiming = setTimeout(delayed, limit);\n\t\t}\n\t};\n}\n\n\n\nexport const uniqueID = (function(){\n\tconst IDs     = {};\n\tconst indexes = {};\n\t\n\t\n\t/**\n\t * Generate a unique ID for a DOM element.\n\t *\n\t * By default, minimalist IDs like \"_1\" or \"_2\" are generated using internally\n\t * tracked incrementation. Uglier, more collision-proof IDs can be generated by\n\t * passing a truthy value to the function's first argument.\n\t *\n\t * Irrespective of whether values are being generated simply or randomly, the\n\t * document tree is always consulted first to ensure a duplicate ID is never\n\t * returned.\n\t *\n\t * @param {String}  prefix - Prefix prepended to result. Default: \"_\"\n\t * @param {Boolean} random - Generate collision-proof IDs using random symbols\n\t * @param {Number}  length - Length of random passwords. Default: 6\n\t * @return {String}\n\t */\n\tfunction uniqueID(prefix, complex, length){\n\t\tlength     = +(length || 6);\n\t\tlet result =  (prefix = prefix || \"_\");\n\t\t\n\t\t// Simple IDs\n\t\tif(!complex){\n\t\t\t\n\t\t\t// Set this prefix's starting index if it's not been used yet\n\t\t\tif(!indexes[prefix])\n\t\t\t\tindexes[prefix] = 0;\n\t\t\t\n\t\t\tresult += ++indexes[prefix];\n\t\t}\n\t\t\n\t\t// Uglier, more collision-proof IDs\n\t\telse{\n\t\t\tconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\t\t\tresult += chars[ Math.round(Math.random() * 51) ];\n\t\t\twhile(result.length < length)\n\t\t\t\tresult += chars[ Math.round(Math.random() * 61)];\n\t\t}\n\t\t\n\t\treturn IDs[result] || document.getElementById(result)\n\t\t\t? uniqueID(prefix, complex)\n\t\t\t: (IDs[result] = true, result);\n\t}\n\t\n\t\n\treturn uniqueID;\n}());\n\n\n\n// Name of the CSSOM property used by this browser for CSS transforms\nexport const cssTransform = (function(n){\n\ts = document.documentElement.style;\n\tif((prop = n.toLowerCase()) in s) return prop;\n\tfor(var prop, s, p = \"Webkit Moz Ms O Khtml\", p = (p.toLowerCase() + p).split(\" \"), i = 0; i < 10; ++i)\n\t\tif((prop = p[i]+n) in s) return prop;\n\treturn \"\";\n}(\"Transform\"));\n\n\n// Whether 3D transforms are supported by this browser\nexport const css3DSupported = (function(propName){\n\tconst e = document.createElement(\"div\"), s = e.style;\n\tconst v = [[\"translateY(\", \")\"], [\"translate3d(0,\", \",0)\"]];\n\ttry{ s[propName] = v[1].join(\"1px\"); } catch(e){}\n\treturn v[+!!s[propName]] === v[1];\n}(cssTransform));\n","\"use strict\";\n\nimport {\n\ttouchEnabled,\n\tpressEvent,\n\tsetToken,\n\tuniqueID,\n\tcssTransform,\n\tcss3DSupported,\n} from \"./helpers.mjs\";\n\nexport const folds = [];\n\n\n/**\n * Represents a single panel of togglable content inside an Accordion.\n *\n * @class\n */\nexport default class Fold{\n\t\n\t/**\n\t * Instantiate a new Fold instance.\n\t *\n\t * @param {Accordion} accordion\n\t * @param {HTMLElement} el\n\t * @constructor\n\t */\n\tconstructor(accordion, el){\n\t\tlet heading          = el.firstElementChild;\n\t\tlet content          = el.lastElementChild;\n\t\tlet useBorders       = accordion.useBorders;\n\t\t\n\t\tthis.index           = folds.push(this) - 1;\n\t\tthis.accordion       = accordion;\n\t\tthis.el              = el;\n\t\tthis.heading         = heading;\n\t\tthis.content         = content;\n\t\tthis.openClass       = accordion.openClass;\n\t\tthis.closeClass      = accordion.closeClass;\n\t\tthis.ariaEnabled     = !accordion.noAria;\n\t\tthis.heightOffset    = accordion.heightOffset;\n\t\tthis.useBorders      = \"auto\" === useBorders ? (0 !== this.elBorder + this.headingBorder) : useBorders;\n\t\tthis.useTransforms   = !accordion.noTransforms && cssTransform;\n\t\tthis.onToggle        = accordion.onToggle;\n\t\tel.accordionFold     = this.index;\n\t\t\n\t\t\n\t\t// Keyboard navigation\n\t\tif(!accordion.noKeys){\n\t\t\theading.tabIndex = 0;\n\t\t\theading.addEventListener(\"keydown\", this.onKeyDown = e => {\n\t\t\t\tconst key = e.keyCode;\n\t\t\t\tlet fold;\n\t\t\t\t\n\t\t\t\tswitch(key){\n\n\t\t\t\t\t// Spacebar: Toggle\n\t\t\t\t\tcase 32:\n\t\t\t\t\t\te.preventDefault(); // Fall-through\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Enter: Toggle\n\t\t\t\t\tcase 13:\n\t\t\t\t\t\tthis.open = !this.open;\n\t\t\t\t\t\tif(\"A\" === e.target.tagName)\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Escape: Clear focus\n\t\t\t\t\tcase 27:\n\t\t\t\t\t\te.target.blur();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Up arrow: Previous section\n\t\t\t\t\tcase 38:{\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a previous sibling to navigate up to?\n\t\t\t\t\t\tif(fold = this.previousFold){\n\t\t\t\t\t\t\tlet children = fold.childAccordions;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Is it open, and does it have nested accordions?\n\t\t\t\t\t\t\tif(fold.open && children){\n\t\t\t\t\t\t\t\tlet lastAcc;\n\t\t\t\t\t\t\t\tlet lastFold;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Locate the deepest/nearest accordion that's currently exposed\n\t\t\t\t\t\t\t\twhile(children){\n\t\t\t\t\t\t\t\t\tlastAcc  = children[children.length - 1];\n\t\t\t\t\t\t\t\t\tlastFold = lastAcc.folds[lastAcc.folds.length - 1];\n\t\t\t\t\t\t\t\t\tif(!lastFold.open) break;\n\t\t\t\t\t\t\t\t\tchildren = lastFold.childAccordions;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlastFold.heading.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Nope\n\t\t\t\t\t\t\telse fold.heading.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a higher level we can jump back up to?\n\t\t\t\t\t\telse if(this.accordion.parent)\n\t\t\t\t\t\t\tthis.accordion.parentFold.heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// There's nothing to move back to, so just let the browser run its usual behaviour\n\t\t\t\t\t\telse return true;\n\t\t\t\t\t\t\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Down arrow: Next section\n\t\t\t\t\tcase 40:{\n\t\t\t\t\t\tconst children = this.childAccordions;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a nested accordion to jump into?\n\t\t\t\t\t\tif(this.open && children)\n\t\t\t\t\t\t\tchildren[0].folds[0].heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// No, there isn't. Is there another sibling to move down to?\n\t\t\t\t\t\telse if(fold = this.nextFold)\n\t\t\t\t\t\t\tfold.heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Is there a containing accordion we can navigate back up to?\n\t\t\t\t\t\telse if(this.accordion.parent){\n\t\t\t\t\t\t\tlet parent = this;\n\t\t\t\t\t\t\twhile(parent = parent.accordion.parentFold)\n\t\t\t\t\t\t\t\tif(fold = parent.nextFold){\n\t\t\t\t\t\t\t\t\tfold.heading.focus();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Nowhere left to go...\n\t\t\t\t\t\t\tif(!parent) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Nah. Just scroll the window normally, as per browser default\n\t\t\t\t\t\telse return true;\n\t\t\t\t\t\t\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Left arrow\n\t\t\t\t\tcase 37:{\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Close an opened section\n\t\t\t\t\t\tif(this.open) this.open = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Switch focus back to parent\n\t\t\t\t\t\telse if(this.accordion.parent)\n\t\t\t\t\t\t\tthis.accordion.parentFold.heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Right arrow\n\t\t\t\t\tcase 39:{\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Open a closed section\n\t\t\t\t\t\tif(!this.open) this.open = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Switch focus to a nested accordion\n\t\t\t\t\t\telse if(this.childAccordions)\n\t\t\t\t\t\t\tthis.childAccordions[0].folds[0].heading.focus();\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t\n\t\t// Listener to record the viewport's scroll offsets at the beginning of a touch\n\t\tlet scrollX, scrollY;\n\t\ttouchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart = () => {\n\t\t\tscrollX = window.pageXOffset;\n\t\t\tscrollY = window.pageYOffset;\n\t\t}, {passive: true});\n\t\t\n\t\t\n\t\theading.addEventListener(pressEvent, this.onPress = e => {\n\t\t\t\n\t\t\t// Pressed on something inside the header\n\t\t\tif(e.target !== heading && heading.contains(e.target)){\n\t\t\t\t\n\t\t\t\t// Cancel fold-toggle if user clicked on an anchor-link\n\t\t\t\tif(\"A\" === e.target.tagName && e.target.href)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\tif(e.type !== \"touchend\" || (e.cancelable && window.pageXOffset === scrollX && window.pageYOffset === scrollY)){\n\t\t\t\tthis.open = !this.open;\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\t\n\t\n\t/**\n\t * Adjust a fold's container to fit its content.\n\t */\n\tfit(){\n\t\tlet height = this.headingHeight;\n\t\tif(this.open)        height += this.content.scrollHeight;\n\t\tif(this.useBorders)  height += this.elBorder;\n\t\tthis.height = height;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Add or remove relevant ARIA attributes from the fold's elements.\n\t *\n\t * @property\n\t * @type {Boolean}\n\t */\n\tget ariaEnabled(){ return this._ariaEnabled; }\n\tset ariaEnabled(input){\n\t\tif((input = !!input) !== !!this._ariaEnabled){\n\t\t\tconst heading = this.heading;\n\t\t\tconst content = this.content;\n\t\t\tthis._ariaEnabled = input;\n\t\t\t\n\t\t\t// Enable ARIA-attribute management\n\t\t\tif(input){\n\t\t\t\theading.setAttribute(\"role\", \"tab\");\n\t\t\t\tcontent.setAttribute(\"role\", \"tabpanel\");\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// Ensure the fold's elements have unique ID attributes.\n\t\t\t\tconst headingSuffix = \"-heading\";\n\t\t\t\tconst contentSuffix = \"-content\";\n\t\t\t\tlet elID            = this.el.id;\n\t\t\t\tlet id;\n\t\t\t\t\n\t\t\t\t// Neither of the fold's elements have an ID attribute\n\t\t\t\tif(!heading.id && !content.id){\n\t\t\t\t\tid             = elID || uniqueID(\"a\");\n\t\t\t\t\theading.id     = id + headingSuffix;\n\t\t\t\t\tcontent.id     = id + contentSuffix;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Either the heading or element lack an ID\n\t\t\t\telse if(!content.id) content.id   = (elID || heading.id) + contentSuffix;\n\t\t\t\telse if(!heading.id) heading.id   = (elID || content.id) + headingSuffix;\n\t\t\t\t\n\t\t\t\t// Finally, double-check each element's ID is really unique\n\t\t\t\tconst $ = s => document.querySelectorAll(\"#\"+s);\n\t\t\t\twhile($(content.id).length > 1 || $(heading.id).length > 1){\n\t\t\t\t\tid         = uniqueID(\"a\");\n\t\t\t\t\tcontent.id = id + contentSuffix;\n\t\t\t\t\theading.id = id + headingSuffix;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update ARIA attributes\n\t\t\t\theading.setAttribute(\"aria-controls\",    content.id);\n\t\t\t\tcontent.setAttribute(\"aria-labelledby\",  heading.id);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// Update the attributes that're controlled by .open's setter\n\t\t\t\theading.setAttribute(\"aria-selected\",  !!this._open);\n\t\t\t\theading.setAttribute(\"aria-expanded\",  !!this._open);\n\t\t\t\tcontent.setAttribute(\"aria-hidden\",     !this._open);\n\t\t\t}\n\t\t\t\n\t\t\t// Disabling; remove all relevant attributes\n\t\t\telse{\n\t\t\t\theading.removeAttribute(\"role\");\n\t\t\t\theading.removeAttribute(\"aria-controls\");\n\t\t\t\theading.removeAttribute(\"aria-selected\");\n\t\t\t\theading.removeAttribute(\"aria-expanded\");\n\t\t\t\t\n\t\t\t\tcontent.removeAttribute(\"role\");\n\t\t\t\tcontent.removeAttribute(\"aria-labelledby\");\n\t\t\t\tcontent.removeAttribute(\"aria-hidden\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Whether or not the fold's currently opened.\n\t *\n\t * @property\n\t * @type {Boolean}\n\t */\n\tget open(){\n\t\t\n\t\t// Derive the fold's opened state from the DOM if it's not been determined yet\n\t\tif(undefined === this._open){\n\t\t\tconst classes = this.el.classList;\n\t\t\tthis._open    = classes.contains(this.openClass);\n\t\t\tsetToken(classes, this.closeClass, !this._open);\n\t\t}\n\t\t\n\t\treturn this._open;\n\t}\n\t\n\tset open(input){\n\t\tif((input = !!input) !== this._open){\n\t\t\t\n\t\t\t// If an onToggle callback was specified, run it. Avoid doing anything if it returns false.\n\t\t\tif(\"function\" === typeof this.onToggle && false === this.onToggle.call(null, this, input))\n\t\t\t\treturn;\n\t\t\t\n\t\t\tsetToken(this.el.classList, this.openClass,   input);\n\t\t\tsetToken(this.el.classList, this.closeClass, !input);\n\t\t\tthis._open = input;\n\t\t\t\n\t\t\t// Update ARIA attributes\n\t\t\tif(this.ariaEnabled){\n\t\t\t\tconst heading = this.heading;\n\t\t\t\theading.setAttribute(\"aria-selected\",      input);\n\t\t\t\theading.setAttribute(\"aria-expanded\",      input);\n\t\t\t\tthis.content.setAttribute(\"aria-hidden\",  !input);\n\t\t\t}\n\t\t\t\n\t\t\t// If this fold was closed when the screen resized, run a full update in case its contents were juggled around\n\t\t\tif(this.needsRefresh){\n\t\t\t\tdelete this.needsRefresh;\n\t\t\t\tthis.accordion.refresh();\n\t\t\t}\n\t\t\telse this.accordion.update();\n\t\t\t\n\t\t\t// Close other folds if accordion is modal\n\t\t\tif(this.accordion.modal && input){\n\t\t\t\tfor(const fold of this.accordion.folds)\n\t\t\t\t\tif(this !== fold) fold.open = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Whether the fold's been deactivated.\n\t *\n\t * Not set directly; changed when setting an accordion's .disabled property.\n\t *\n\t * @property\n\t * @type {Boolean}\n\t */\n\tget disabled(){ return this._disabled; }\n\tset disabled(input){\n\t\tif((input = !!input) !== !!this._disabled){\n\t\t\tlet heading = this.heading;\n\t\t\tlet style   = this.el.style;\n\t\t\tlet classes = this.el.classList;\n\t\t\t\n\t\t\t// Deactivated\n\t\t\tif(this._disabled = input){\n\t\t\t\tstyle.height = null;\n\t\t\t\tthis.useTransforms\n\t\t\t\t\t? (style[cssTransform] = null)\n\t\t\t\t\t: (style.top = null);\n\t\t\t\t\n\t\t\t\ttouchEnabled && heading.removeEventListener(\"touchstart\", this.onTouchStart);\n\t\t\t\theading.removeEventListener(pressEvent, this.onPress);\n\t\t\t\tclasses.remove(this.openClass, this.closeClass);\n\t\t\t\tif(this.onKeyDown){\n\t\t\t\t\theading.removeEventListener(\"keydown\", this.onKeyDown);\n\t\t\t\t\theading.removeAttribute(\"tabindex\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(this.ariaEnabled){\n\t\t\t\t\tthis.ariaEnabled  = false;\n\t\t\t\t\tthis._ariaEnabled = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Reactivated\n\t\t\telse{\n\t\t\t\tstyle.height = this._height + \"px\";\n\t\t\t\tthis.useTransforms\n\t\t\t\t\t? style[cssTransform] =\n\t\t\t\t\t\tcss3DSupported\n\t\t\t\t\t\t\t? (\"translate3D(0,\" + this._y + \"px,0)\")\n\t\t\t\t\t\t\t: (\"translateY(\"    + this._y + \"px)\")\n\t\t\t\t\t: (style.top = this._y + \"px\");\n\t\t\t\t\n\t\t\t\ttouchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart);\n\t\t\t\theading.addEventListener(pressEvent, this.onPress);\n\t\t\t\t\n\t\t\t\tif(this.onKeyDown){\n\t\t\t\t\theading.addEventListener(\"keydown\", this.onKeyDown);\n\t\t\t\t\theading.tabIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Vertical position of the fold within an accordion's container.\n\t *\n\t * @property\n\t * @type {Number}\n\t */\n\tget y(){\n\t\tif(undefined === this._y)\n\t\t\treturn (this._y = parseInt(this.el.style.top) || 0);\n\t\treturn this._y;\n\t}\n\t\n\tset y(input){\n\t\tif((input = +input) !== this._y){\n\t\t\tthis._y     = input;\n\t\t\tconst style = this.el.style;\n\t\t\tthis.useTransforms\n\t\t\t\t? style[cssTransform] =\n\t\t\t\t\tcss3DSupported\n\t\t\t\t\t\t? (\"translate3D(0,\" + input + \"px,0)\")\n\t\t\t\t\t\t: (\"translateY(\"    + input + \"px)\")\n\t\t\t\t: (style.top = input + \"px\");\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Height of the fold's outermost container.\n\t *\n\t * @property\n\t * @type {Number}\n\t */\n\tget height(){\n\t\tif(undefined === this._height){\n\t\t\tlet height           = this.headingHeight + this.content.scrollHeight;\n\t\t\tthis.el.style.height = height + \"px\";\n\t\t\treturn (this._height = height);\n\t\t}\n\t\treturn this._height;\n\t}\n\t\n\tset height(input){\n\t\tif(input && (input = +input) !== this._height){\n\t\t\tthis.el.style.height = input + \"px\";\n\t\t\tthis._height         = input;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Current height of the fold's heading.\n\t *\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget headingHeight(){\n\t\treturn this.heading.scrollHeight\n\t\t\t+ this.heightOffset\n\t\t\t+ (this.useBorders ? this.headingBorder : 0);\n\t}\n\t\n\t/**\n\t * Total height consumed by the heading element's CSS borders, if any.\n\t *\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget headingBorder(){\n\t\tlet heading = this.heading;\n\t\treturn (heading.offsetHeight || 0) - (heading.clientHeight || 0);\n\t}\n\t\n\t\n\t/**\n\t * Total height of the fold's container element.\n\t *\n\t * @type {Number}\n\t * @readonly\n\t */\n\tget elHeight(){\n\t\treturn this.el.scrollHeight + (this.useBorders ? this.elBorder : 0);\n\t}\n\t\n\t/**\n\t * Total height consumed by container element's CSS borders, if any.\n\t * \n\t * @type {Number}\n\t * @readonly\n\t */\n\tget elBorder(){\n\t\tlet el = this.el;\n\t\treturn (el.offsetHeight || 0) - (el.clientHeight || 0);\n\t}\n\t\n\t\n\t/**\n\t * Whether the fold's container has been resized incorrectly.\n\t *\n\t * @type {Boolean}\n\t * @readonly\n\t * @property\n\t */\n\tget wrongSize(){\n\t\treturn this.headingHeight + this.content.scrollHeight !== this.el.scrollHeight;\n\t}\n}\n","\"use strict\";\n\nimport {transitionEnd, setToken, debounce} from \"./helpers.mjs\";\nimport {default as Fold, folds} from \"./fold.mjs\";\n\nconst accordions     = [];\nlet activeAccordions = 0;\nlet lastResizeRate;\n\n\n/**\n * Represents a column of collapsible content regions.\n * @class\n */\nexport default class Accordion {\n\n\t/**\n\t * Instantiate a new Accordion instance.\n\t *\n\t * @param {HTMLElement} el                    - Container wrapped around each immediate fold\n\t * @param {Object}      options               - Optional hash of settings\n\t * @param {String}      options.openClass     - CSS class controlling each fold's \"open\" state\n\t * @param {String}      options.closeClass    - CSS class used to mark a fold as closed\n\t * @param {String}      options.edgeClass     - CSS class toggled based on whether the bottom-edge is visible\n\t * @param {String}      options.snapClass     - CSS class for disabling transitions between window resizes\n\t * @param {String}      options.enabledClass  - CSS class marking an accordion as enabled\n\t * @param {String}      options.disabledClass - CSS class marking an accordion as disabled\n\t * @param {Boolean}     options.disabled      - Whether to disable the accordion on creation\n\t * @param {Boolean}     options.modal         - Whether to close the current fold when opening another\n\t * @param {Boolean}     options.noAria        - Disable the addition and management of ARIA attributes\n\t * @param {Boolean}     options.noKeys        - Disable keyboard navigation\n\t * @param {Boolean}     options.noTransforms  - Disable CSS transforms; positioning will be used instead\n\t * @param {Number}      options.heightOffset  - Distance to offset each fold by\n\t * @param {Boolean}     options.useBorders    - Consider borders when calculating fold heights\n\t * @param {Function}    options.onToggle      - Callback executed when opening or closing a fold\n\t * @constructor\n\t */\n\tconstructor(el, options){\n\t\tthis.index = accordions.push(this) - 1;\n\t\t\n\t\t// Parse options\n\t\toptions            = options || {};\n\t\tthis.openClass     = options.openClass  || \"open\";\n\t\tthis.closeClass    = options.closeClass || \"closed\";\n\t\tthis.edgeClass     = (undefined === options.edgeClass    ? \"edge-visible\" : options.edgeClass);\n\t\tthis.snapClass     = (undefined === options.snapClass    ? \"snap\"         : options.snapClass);\n\t\tthis.enabledClass  = (undefined === options.enabledClass ? \"accordion\"    : options.enabledClass);\n\t\tthis.disabledClass = options.disabledClass;\n\t\tthis.modal         = !!options.modal;\n\t\tthis.noAria        = !!options.noAria;\n\t\tthis.noKeys        = !!options.noKeys;\n\t\tthis.noTransforms  = !!options.noTransforms;\n\t\tthis.heightOffset  = +options.heightOffset || 0;\n\t\tthis.useBorders    = undefined === options.useBorders ? \"auto\" : options.useBorders;\n\t\tthis.onToggle      = options.onToggle;\n\t\t\n\t\t\n\t\t// Create a fold for each immediate descendant of the Accordion's container\n\t\tlet folds = [];\n\t\tfor(let i of Array.from(el.children)){\n\t\t\tlet fold = new Fold(this, i);\n\t\t\tfolds.push(fold);\n\t\t\t\n\t\t\t// Connect the fold to its previous sibling, if it's not the first to be added\n\t\t\tlet prev = folds[folds.length - 2];\n\t\t\tif(prev){\n\t\t\t\tprev.nextFold     = fold;\n\t\t\t\tfold.previousFold = prev;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tel.accordion    = this.index;\n\t\tthis.noAria || el.setAttribute(\"role\", \"tablist\");\n\t\tthis.el         = el;\n\t\tthis.folds      = folds;\n\n\t\t// Add .enabledClass early - it might affect the heights of each fold\n\t\tif(!options.disabled && this.enabledClass)\n\t\t\tel.classList.add(this.enabledClass);\n\t\t\n\t\tthis.update();\n\t\t\n\t\t\n\t\t// Find out if this accordion's nested inside another\n\t\tlet next = el;\n\t\twhile((next = next.parentNode) && 1 === next.nodeType){\n\t\t\tlet fold = Accordion.getFold(next);\n\t\t\tif(fold){\n\t\t\t\tlet accordion   = fold.accordion;\n\t\t\t\tthis.parent     = accordion;\n\t\t\t\tthis.parentFold = fold;\n\t\t\t\tthis.edgeClass && el.classList.remove(this.edgeClass);\n\t\t\t\t(accordion.childAccordions = accordion.childAccordions || []).push(this);\n\t\t\t\t(fold.childAccordions      = fold.childAccordions      || []).push(this);\n\n\t\t\t\t// Adjust the height of the containing fold's element\n\t\t\t\tif(fold.open){\n\t\t\t\t\tlet scrollHeight = fold.el.scrollHeight;\n\t\t\t\t\tlet distance     = (fold.headingHeight + fold.content.scrollHeight) - scrollHeight || (scrollHeight - fold.el.clientHeight);\n\t\t\t\t\taccordion.updateFold(fold, distance);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tthis.edgeClass && this.el.addEventListener(transitionEnd, this.onTransitionEnd = e => {\n\t\t\tif(!this.parent && e.target === el && \"height\" === e.propertyName && el.getBoundingClientRect().bottom > window.innerHeight)\n\t\t\t\tel.classList.remove(this.edgeClass);\n\t\t});\n\t\t\n\t\tthis.disabled = !!options.disabled;\n\t}\n\t\n\t\n\t/**\n\t * Get or set the accordion enclosing this one.\n\t *\n\t * @property\n\t * @type {Accordion}\n\t */\n\tset parent(input){ this._parent = input; }\n\tget parent(){\n\t\tlet result = this._parent;\n\t\tif(!result) return null;\n\t\t\n\t\t// Search for the first ancestor that *isn't* disabled\n\t\twhile(result){\n\t\t\tif(!result.disabled) return result;\n\t\t\tresult = result.parent;\n\t\t}\n\t\treturn null;\n\t}\n\t\n\t\n\t/**\n\t * Get or set the fold of the accordion enclosing this one.\n\t *\n\t * @property\n\t * @type {Fold}\n\t */\n\tset parentFold(input){ this._parentFold = input; }\n\tget parentFold(){\n\t\tlet fold = this._parentFold;\n\t\tif(!fold) return null;\n\t\t\n\t\tlet accordion = fold.accordion;\n\t\t\n\t\t// Search for the first ancestor that *isn't* disabled\n\t\twhile(fold && accordion){\n\t\t\tif(!accordion.disabled) return fold;\n\t\t\tif(accordion = accordion.parent)\n\t\t\t\tfold = accordion.parentFold;\n\t\t}\n\t\treturn null;\n\t}\n\t\n\t\n\t/**\n\t * Whether the accordion's been deactivated.\n\t *\n\t * @property\n\t * @type {Boolean}\n\t */\n\tget disabled(){ return this._disabled; }\n\tset disabled(input){\n\t\tif((input = !!input) !== this._disabled){\n\t\t\tconst el      = this.el;\n\t\t\tconst style   = el.style;\n\t\t\tconst classes = el.classList;\n\t\t\t\n\t\t\tthis.enabledClass  && setToken(classes, this.enabledClass,  !input);\n\t\t\tthis.disabledClass && setToken(classes, this.disabledClass,  input);\n\t\t\t\n\t\t\t\n\t\t\t// Deactivating\n\t\t\tif(this._disabled = input){\n\t\t\t\tstyle.height = null;\n\t\t\t\tthis.snapClass && classes.remove(this.snapClass);\n\t\t\t\tif(this.edgeClass){\n\t\t\t\t\tel.removeEventListener(transitionEnd, this.onTransitionEnd);\n\t\t\t\t\tclasses.remove(this.edgeClass);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor(let i of this.folds)\n\t\t\t\t\ti.disabled = true;\n\t\t\t\t\n\t\t\t\tthis.noAria || el.removeAttribute(\"role\");\n\t\t\t\t--activeAccordions;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t// Reactivating\n\t\t\telse{\n\t\t\t\tfor(let i of this.folds)\n\t\t\t\t\ti.disabled = false;\n\t\t\t\t\n\t\t\t\tthis.noAria || el.setAttribute(\"role\", \"tablist\");\n\t\t\t\t++activeAccordions;\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t\t\n\n\t\t\t\n\t\t\t// If there're no more active accordions, disable the onResize handler\n\t\t\tif(activeAccordions <= 0){\n\t\t\t\tactiveAccordions = 0;\n\t\t\t\tAccordion.setResizeRate(false);\n\t\t\t}\n\t\t\t\n\t\t\t// Otherwise, reactivate the onResize handler, assuming it was previously active\n\t\t\telse if(lastResizeRate)\n\t\t\t\tAccordion.setResizeRate(lastResizeRate);\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Height of the accordion's container element.\n\t *\n\t * @property\n\t * @type {Number}\n\t */\n\tget height(){ return this._height; }\n\tset height(input){\n\t\tif(input && (input = +input) !== this._height){\n\t\t\tthis.el.style.height = input + \"px\";\n\t\t\tthis._height         = input;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Internal method to check if an accordion's bottom-edge is visible to the user (or about to be).\n\t *\n\t * @param {Number} offset\n\t * @private\n\t */\n\tedgeCheck(offset){\n\t\tlet edgeClass = this.edgeClass;\n\t\tif(edgeClass){\n\t\t\tlet box         = this.el.getBoundingClientRect();\n\t\t\tlet windowEdge  = window.innerHeight;\n\t\t\tlet classes     = this.el.classList;\n\t\t\t\n\t\t\t// If the bottom-edge is visible (or about to be), enable height animation\n\t\t\tif(box.bottom + (offset || 0) < windowEdge)\n\t\t\t\tclasses.add(edgeClass);\n\t\t\t\n\t\t\t// If the bottom-edge isn't visible anyway, disable height animation immediately\n\t\t\telse if(box.bottom > windowEdge)\n\t\t\t\tclasses.remove(edgeClass);\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the vertical ordinate of each sibling for a particular fold.\n\t *\n\t * @param {Fold} fold\n\t * @param {Number} offset - Pixel distance to adjust by\n\t */\n\tupdateFold(fold, offset){\n\t\tlet next = fold;\n\t\tlet parentFold = this.parentFold;\n\t\t\n\t\twhile(next = next.nextFold)\n\t\t\tnext.y  += offset;\n\t\tparentFold || this.edgeCheck(offset);\n\t\tfold.height += offset;\n\t\tthis.height += offset;\n\t\t\n\t\tparentFold && parentFold.open && this.parent.updateFold(parentFold, offset);\n\t}\n\t\n\t\n\t/**\n\t * Update the height of each fold to fit its content.\n\t */\n\tupdate(){\n\t\tlet y = 0;\n\t\tlet height = 0;\n\t\tfor(let i of this.folds){\n\t\t\ti.y = y;\n\t\t\ti.fit();\n\t\t\ty      += i.height;\n\t\t\theight += i.height;\n\t\t}\n\t\t\n\t\tlet parentFold = this.parentFold;\n\t\tlet diff       = height - this._height;\n\t\tparentFold\n\t\t\t? (parentFold.open && this.parent.updateFold(parentFold, diff))\n\t\t\t: this.edgeCheck(diff);\n\t\t\n\t\tthis.height = height;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Recalculate the boundaries of an Accordion and its descendants.\n\t *\n\t * This method should only be called if the width of a container changes,\n\t * or a fold's contents have resized unexpectedly (such as when images load).\n\t *\n\t * @param {Boolean} allowSnap - Snap folds instantly into place without transitioning\n\t */\n\trefresh(allowSnap){\n\t\tlet snap = allowSnap ? this.snapClass : false;\n\t\tsnap && this.el.classList.add(snap);\n\t\t\n\t\tthis.update();\n\t\tif(this.childAccordions)\n\t\t\tthis.childAccordions.forEach(a => a.parentFold.open\n\t\t\t\t? a.refresh(allowSnap)\n\t\t\t\t: (a.parentFold.needsRefresh = true));\n\t\t\n\t\tsnap && setTimeout(() => this.el.classList.remove(snap), 20);\n\t}\n\t\n\t\n\t\n\t/**\n\t * Whether one of the Accordion's folds has been resized incorrectly.\n\t *\n\t * @type {Boolean}\n\t * @readonly\n\t * @property\n\t */\n\tget wrongSize(){\n\t\tfor(let i of this.folds)\n\t\t\tif(i.wrongSize) return true;\n\t\tif(this.childAccordions) for(let i of this.childAccordions)\n\t\t\tif(i.wrongSize) return true;\n\t\treturn false;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Return the top-level ancestor this accordion's nested inside.\n\t *\n\t * @type {Accordion}\n\t * @readonly\n\t * @property\n\t */\n\tget root(){\n\t\tlet result = this;\n\t\twhile(result){\n\t\t\tif(!result.parent) return result;\n\t\t\tresult = result.parent;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Alter the rate at which screen-resize events update accordion widths.\n\t *\n\t * @param {Number} delay - Rate expressed in milliseconds\n\t */\n\tstatic setResizeRate(delay){\n\t\tlet fn = function(){\n\t\t\tfor(let i of accordions)\n\t\t\t\ti.parent || i.disabled || i.refresh(true);\n\t\t};\n\t\t\n\t\twindow.removeEventListener(\"resize\", this.onResize);\n\t\t\n\t\t// Make sure we weren't passed an explicit value of FALSE, or a negative value\n\t\tif(false !== delay && (delay = +delay || 0) >= 0){\n\t\t\tthis.onResize = delay ? debounce(fn, delay) : fn;\n\t\t\twindow.addEventListener(\"resize\", this.onResize);\n\t\t\tif(delay) lastResizeRate = delay;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Return the closest (most deeply-nested) accordion enclosing an element.\n\t *\n\t * @param {Node} node\n\t * @return {Accordion}\n\t */\n\tstatic getAccordion(node){\n\t\twhile(node){\n\t\t\tif(\"accordion\" in node)\n\t\t\t\treturn accordions[node.accordion];\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t\tif(!node || node.nodeType !== 1) return null;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return the closest (most deeply-nested) fold enclosing an element.\n\t *\n\t * @param {Node} node\n\t * @return {Fold}\n\t */\n\tstatic getFold(node){\n\t\twhile(node){\n\t\t\tif(\"accordionFold\" in node)\n\t\t\t\treturn folds[node.accordionFold];\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t\tif(!node || node.nodeType !== 1) return null;\n\t\t}\n\t}\n}\n\n\nAccordion.setResizeRate(25);\nwindow.Accordion = Accordion;\n","\n\nimport Accordion from 'accordion/src/accordion.mjs'\nimport 'accordion/src/accordion.css'\n\nvar el = document.querySelector(\".accordion\");\nnew Accordion(el);\n\n\n\n"],"names":["$48473ccccf754291$export$9e0ecd8189c8ccea","document","documentElement","$48473ccccf754291$export$55018ede9c09a171","$48473ccccf754291$export$358dc01d65cad417","names","split","i","toLowerCase","window","$48473ccccf754291$export$57e714f81a2c3d86","list","token","enabled","add","remove","$48473ccccf754291$export$89912e019eef22aa","IDs","indexes","uniqueID","prefix","complex","length","result","chars","Math","round","random","getElementById","$48473ccccf754291$export$fd43050ca342497c","n","s","style","prop","p","$48473ccccf754291$export$412d5118d1a3f0f9","propName","createElement","v","join","e1","$32467b70a33bcef6$export$14cc6abdbca750b","constructor","accordion","el","scrollX","scrollY","heading","firstElementChild","content","lastElementChild","useBorders","this","index","push","openClass","closeClass","ariaEnabled","noAria","heightOffset","elBorder","headingBorder","useTransforms","noTransforms","onToggle","accordionFold","noKeys","tabIndex","addEventListener","onKeyDown","e","fold","keyCode","preventDefault","open","target","tagName","blur","previousFold","children","childAccordions","lastAcc","lastFold","folds","focus","parent","parentFold","nextFold","onTouchStart","pageXOffset","pageYOffset","passive","onPress","contains","href","type","cancelable","fit","height","headingHeight","scrollHeight","_ariaEnabled","input","setAttribute","headingSuffix","contentSuffix","id","elID","$","querySelectorAll","_open","removeAttribute","undefined","classes","classList","input1","call","needsRefresh","refresh","update","modal","disabled","_disabled","input2","top","removeEventListener","_height","_y","y","parseInt","input3","input4","offsetHeight","clientHeight","elHeight","wrongSize","$8cf0c941fd5abc92$var$accordions","$8cf0c941fd5abc92$var$lastResizeRate","$8cf0c941fd5abc92$var$activeAccordions","options","edgeClass","snapClass","enabledClass","disabledClass","Array","from","$32467b70a33bcef6$export$2e2bcd8739ae039","prev","next","parentNode","nodeType","$8cf0c941fd5abc92$export$2e2bcd8739ae039","getFold","distance","updateFold","onTransitionEnd","propertyName","getBoundingClientRect","bottom","innerHeight","_parent","_parentFold","setResizeRate","edgeCheck","offset","box","windowEdge","offset1","diff","allowSnap","snap","forEach","a","setTimeout","i1","root","static","delay","fn","onResize","limit","asap","started","context","args","timing","delayed","timeSince","Date","now","apply","clearTimeout","arguments","$48473ccccf754291$export$61fc7d43ac8f84b0","node","node1","Accordion","$8460600098fbe4ad$var$el","querySelector"],"version":3,"file":"index.ef33d801.js.map"}